---
- name: Set apiVersion and kind variables
  set_fact:
    api_version: '{{ hostvars["localhost"]["inventory_file"].split("/")[4:6] | join("/")  }}'
    kind: '{{ hostvars["localhost"]["inventory_file"].split("/")[6]  }}'

- name: Getting raw pulp_settings
  set_fact:
    raw_pulp_settings: "{{ raw_spec['pulp_settings'] | default({}) }}"
  no_log: "{{ no_log }}"
  when: pulp_settings is defined

- name: Combining pulp_settings
  set_fact:
    pulp_combined_settings: "{{ default_settings|combine(raw_pulp_settings, recursive=True) if pulp_settings is defined and pulp_settings is not none else default_settings }}"
  no_log: "{{ no_log }}"

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-Web-Ready"
        message: "API root should start and end with '/'"
        reason: ApiRootFormatInvalid
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: Validade API root
  fail:
    msg: "API root should start and end with '/'"
  when:
  - not pulp_combined_settings.api_root.startswith('/')
  - not pulp_combined_settings.api_root.endswith('/')

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-Web-Ready"
        message: "Creating {{ ansible_operator_meta.name }}-{{ deployment_type }}-configmap ConfigMap resource"
        reason: CreatingConfigMap
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: pulp-web configmap
  k8s:
    state: "{{ deployment_state }}"
    definition: "{{ lookup('template', 'templates/' + item + '.configmap.yaml.j2') | from_yaml }}"
  with_items:
    - pulp-web

- name: Set default pulp-web image
  set_fact:
    _default_image_web: "{{ _image_web }}:{{ _image_web_version }}"

- name: Set user provided pulp-web image
  set_fact:
    _custom_image_web: "{{ image_web }}:{{ image_web_version }}"
  when:
    - image_web is defined and image_web != ''
    - image_web_version is defined and image_web_version != ''

- name: Set pulp-web image URL
  set_fact:
    _image_web: "{{ _custom_image_web | default(lookup('env', 'RELATED_IMAGE_PULP_WEB')) | default(_default_image_web, true) }}"

- name: Set node affinity
  set_fact:
    _node_affinity: "{{ raw_spec['affinity']['node_affinity'] | default({}) }}"
  when: affinity is defined and affinity.node_affinity is defined

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-Web-Ready"
        message: "Creating {{ ansible_operator_meta.name }}-web Deployment resource"
        reason: CreatingDeployment
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: pulp-web deployment
  k8s:
    state: "{{ deployment_state }}"
    definition: "{{ lookup('template', 'templates/' + item + '.deployment.yaml.j2') | from_yaml }}"
  with_items:
    - pulp-web

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-Web-Ready"
        message: "Creating {{ ansible_operator_meta.name }}-web-svc Service resource"
        reason: CreatingService
        status: "False"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"

- name: pulp-web service
  k8s:
    state: "{{ deployment_state }}"
    definition: "{{ lookup('template', 'templates/' + item + '.service.yaml.j2') | from_yaml }}"
  with_items:
    - pulp-web

- k8s_status:
    api_version: "{{ api_version }}"
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: "{{ deployment_type|capitalize }}-Web-Ready"
        message: "All {{ deployment_type|capitalize }}-web tasks ran successfully"
        reason: WebTasksFinished
        status: "True"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"
