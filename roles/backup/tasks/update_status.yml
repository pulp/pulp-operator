---
- name: Set apiVersion and kind variables
  set_fact:
    api_version: '{{ hostvars["localhost"]["inventory_file"].split("/")[4:6] | join("/")  }}'
    kind: '{{ hostvars["localhost"]["inventory_file"].split("/")[6]  }}'

# The deployment name in this status can be referenced when restoring
- name: Update backup directory status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      deploymentName: "{{ deployment_name }}"
  when: backup_complete is defined

# The backup directory in this status can be referenced when restoring
- name: Update deployment name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      backupDirectory: "{{ _backup_dir }}"
  when: backup_complete is defined

# The backup PVC in this status can be referenced when restoring
- name: Update backup PVC status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      backupClaim: "{{ backup_claim }}"
  when: backup_complete is defined

# The backup PVC namespace in this status can be referenced when restoring
- name: Update backup PVC namespace status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      backupNamespace: "{{ backup_pvc_namespace }}"
  when: backup_complete is defined

# The backup  storage type in this status can be referenced when restoring
- name: Update deployment storage type status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      deploymentStorageType: "{{ storage_type }}"
  when: storage_type is defined

# The backup admin password secret in this status can be referenced when restoring
- name: Update admin password secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      adminPasswordSecret: "{{ admin_password_secret }}"
  when: admin_password_secret is defined

# The backup database secret in this status can be referenced when restoring
- name: Update database secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      databaseConfigurationSecret: "{{ postgres_configuration_secret }}"
  when: postgres_configuration_secret is defined

# The backup db fields encryption secret in this status can be referenced when restoring
- name: Update DB fields encryption secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      dbFieldsEncryptionSecret: "{{ db_fields_encryption_secret }}"
  when: db_fields_encryption_secret is defined

# The backup galaxy signing secret in this status can be referenced when restoring
- name: Update galaxy signing secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      signingSecret: "{{ signing_secret }}"
  when: signing_secret is defined

# The backup container token secret in this status can be referenced when restoring
- name: Update container token secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      containerTokenSecret: "{{ container_token_secret }}"
  when: container_token_secret is defined

# The backup sso secret in this status can be referenced when restoring
- name: Update sso secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      ssoSecret: "{{ sso_secret }}"
  when: sso_secret is defined

# The backup objectstorage secret in this status can be referenced when restoring
- name: Update objectstorage secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      storageSecret: "{{ storage_secret }}"
  when: storage_secret is defined

- name: Add BackupComplete condition
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    conditions:
      - type: BackupComplete
        status: "True"
        reason: Successful
        message: "The Backup has been completed"
        lastTransitionTime: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"
