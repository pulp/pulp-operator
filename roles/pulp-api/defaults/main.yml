---
api:
  replicas: 1
  log_level: INFO
  resource_requirements:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 800m
      memory: 1Gi

# Here we use  _pulp_pulpproject_org_pulp to get un-modified cr
# see: https://github.com/operator-framework/operator-sdk/issues/1770
raw_spec: "{{ vars['_pulp_pulpproject_org_pulp']['spec'] }}"

# Secret to lookup that provide the admin password
#
admin_password_secret: ''

admin_password_name: '{{ ansible_operator_meta.name }}-admin-password'

# Set content host
content_host: '{{ ansible_operator_meta.name }}-content-svc'
content_port: '24816'

# Host to create the root with.
# If not specific will default to <instance-name>-<namespace>-<routerCanonicalHostname>
#
route_host: ''

hostname: '{{ deployment_type }}.example.com'

web_protocol: 'http'

ingress_type: none
# TLS secret for the ingress. The secret either has to exist before hand with
# the corresponding cert and key or just be an indicator for where an automated
# process like cert-manager (enabled via annotations) will store the TLS
# certificate and key.
ingress_tls_secret: ''

# Secret to lookup that provide the TLS specific
# credentials to deploy
#
route_tls_secret: ''

is_file_storage: true

object_storage_path: ''

s3_secret_data_available: false
s3_access_key_id_available: false
s3_secret_access_key_available: false
s3_bucket_name_available: false
s3_region_available: false
s3_endpoint_available: false

default_s3_settings:
  AWS_DEFAULT_ACL: "@none None"
  S3_USE_SIGV4: true
  AWS_S3_SIGNATURE_VERSION: "s3v4"
  AWS_S3_ADDRESSING_STYLE: "path"
  DEFAULT_FILE_STORAGE: "storages.backends.s3boto3.S3Boto3Storage"
  MEDIA_ROOT: ""

azure_secret_data_avaiable: false
azure_account_name_available: false
azure_account_key_available: false
azure_container_available: false

default_azure_settings:
  AZURE_URL_EXPIRATION_SECS: 60
  AZURE_OVERWRITE_FILES: "True"
  DEFAULT_FILE_STORAGE: "storages.backends.azure_storage.AzureStorage"

is_k8s: false
is_openshift: false

container_auth_public_key_name: 'container_auth_public_key.pem'
container_auth_private_key_name: 'container_auth_private_key.pem'

# Keycloack SSO settings
keycloak_admin_role: hubadmin
keycloak_port: 443
keycloak_protocol: https

sso_secret_data_available: false
social_auth_keycloak_key_available: false
social_auth_keycloak_secret_available: false
social_auth_keycloak_public_key_available: false
keycloak_host_available: false
keycloak_protocol_available: false
keycloak_port_available: false
keycloak_realm_available: false

__pulp_gpg_inspect_command: "gpg --import-options show-only --import --with-fingerprint"
__gpg_init_container_image: "quay.io/centos/centos:stream9"

gunicorn_timeout: 90
gunicorn_api_workers: 2
