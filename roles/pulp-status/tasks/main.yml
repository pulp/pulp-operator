---

- name: Set apiVersion and kind variables
  set_fact:
    api_version: '{{ hostvars["localhost"]["inventory_file"].split("/")[4:6] | join("/")  }}'
    kind: '{{ hostvars["localhost"]["inventory_file"].split("/")[6]  }}'

- name: Update migrantDatabaseConfigurationSecret status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      migrantDatabaseConfigurationSecret: "{{ postgres_migrated_from_secret }}"
  when:
    - postgres_migrated_from_secret is defined
    - postgres_migrated_from_secret | length

# This signifies that the PostgreSQL upgrade is complete and the version it was upgraded to
- name: Update upgradedPostgresVersion status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      upgradedPostgresVersion: "{{ upgraded_postgres_version }}"
  when:
    - upgraded_postgres_version is defined
    - upgraded_postgres_version | length

- name: Get the resource pod information.
  k8s_info:
    kind: Pod
    namespace: '{{ ansible_operator_meta.namespace }}'
    label_selectors:
      - "app.kubernetes.io/instance=nginx-{{ ansible_operator_meta.name }}"
  register: pulp_pods
  until: "pulp_pods['resources'][0]['status']['phase'] == 'Running'"
  delay: 5
  retries: 100

- name: Set the resource pod name as a variable.
  set_fact:
    pulp_web_pod_name: "{{ pulp_pods['resources'][0]['metadata']['name'] }}"

- name: Set the status protocol and port
  set_fact:
    status_protocol: "https"
    status_port: "8443"
  when:
    - ingress_type | lower == 'route'
    - route_tls_termination_mechanism | lower == 'passthrough'

- name: Check that status and it returns a status 200
  uri:
    url: '{{ status_protocol }}://{{ ansible_operator_meta.name }}-web-svc.{{ ansible_operator_meta.namespace }}.svc.cluster.local:{{ status_port }}/pulp/api/v3/status/'
  register: result
  until: >
    result.json is defined and
    result.json.versions | length
  delay: 5
  retries: 10

- name: Get installed plugins
  set_fact:
    installed_plugins: "{{ result.json.versions | items2dict(key_name='component', value_name='version') }}"

- name: Show installed plugins
  debug:
    var: installed_plugins

- name: Include resource manager role
  include_role:
    name: pulp-resource-manager
  when: installed_plugins.pulpcore is defined or installed_plugins.core is version('3.16.0', '<')

- name: Update admin password status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      adminPasswordSecret: "{{ admin_password_secret_obj['resources'][0]['metadata']['name'] }}"

- name: Update database configuration status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      databaseConfigurationSecret: "{{ pg_config['resources'][0]['metadata']['name'] }}"

- name: Update storage type status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      storageType: "{{ storage_type | capitalize }}"

- name: Update file storage pvc name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      storagePersistentVolumeClaim: "{{ ansible_operator_meta.name }}-file-storage"
  when: is_file_storage

- name: Update object storage secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      storageSecret: "{{ object_storage_secret }}"
  when: not is_file_storage

- name: Update DB fields encryption secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      dbFieldsEncryptionSecret: "{{ db_fields_encryption_secret }}"
  when: db_fields_encryption_secret is defined

- name: Update galaxy signing secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      galaxySigningSecret: "{{ galaxy_signing_secret }}"
  when: galaxy_signing_secret is defined

- name: Update container token secret name status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      containerTokenSecret: "{{ container_token_secret }}"
  when: container_token_secret is defined

- name: Update version status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"

- name: Update image status
  operator_sdk.util.k8s_status:
    api_version: '{{ api_version }}'
    kind: "{{ kind }}"
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    status:
      deployedImage: "{{ _custom_image | default(lookup('env', 'RELATED_IMAGE_PULP')) | default(_default_image) }}"

- block:
    - name: Retrieve route URL
      k8s_info:
        kind: Route
        namespace: '{{ ansible_operator_meta.namespace }}'
        name: '{{ ansible_operator_meta.name }}'
      register: route_url

    - name: Update URL status
      operator_sdk.util.k8s_status:
        api_version: '{{ api_version }}'
        kind: "{{ kind }}"
        name: "{{ ansible_operator_meta.name }}"
        namespace: "{{ ansible_operator_meta.namespace }}"
        status:
          webURL: "https://{{ route_url['resources'][0]['status']['ingress'][0]['host'] }}"

  when: ingress_type | lower == 'route'
