---

- name: Fail execution if image_pull_secret or image_pull_secrets are defined but as NoneType ('image_pull_secret[s]:')
  fail:
    msg: "If image_pull_secret or image_pull_secrets will not be used, their declarations should be removed."
  when: image_pull_secret|type_debug == 'NoneType' or image_pull_secrets|type_debug == 'NoneType'

- name: Get the imagePullSecrets from "{{ ansible_operator_meta.name }}"
  k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: "{{ ansible_operator_meta.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: _sa_output

- name: Iterate over the imagePullSecrets to see if can find the dockercfg secret (for OCP environments)
  set_fact:
    __dockercfg_secret: "{{ item.name | regex_search( ansible_operator_meta.name + '-dockercfg-' + '[a-z0-9]{5}') }}"
  when: _sa_output.resources[0].imagePullSecrets is defined and __dockercfg_secret | default() | length == 0
  with_items: '{{ _sa_output.resources[0].imagePullSecrets }}'

- name: Update service account with image pull secret
  k8s:
    apply: true
    definition: "{{ lookup('template', 'service_account.yaml.j2') }}"

- block:
  - name: Get default ingress domain
    k8s_info:
      api_version: config.openshift.io/v1
      kind: Ingress
      name: cluster
    register: _default_ingress_domain
    when:
    - ingress_type | lower == 'route'

  - name: Ensure route host
    set_fact:
      route_host: "{{ ansible_operator_meta.name + '-' + ansible_operator_meta.namespace + '.' + _default_ingress_domain.resources[0].spec.domain | default('') }}"
    when:
      - route_host == ''
      - ingress_type | lower == 'route'

  - name: Define web URL
    set_fact:
      web_url: "https://{{ route_host }}"
  when: ingress_type | lower == 'route'
