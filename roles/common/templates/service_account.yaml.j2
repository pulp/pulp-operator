---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
  labels:
    app.kubernetes.io/name: "{{ ansible_operator_meta.name }}"
    app.kubernetes.io/part-of: "{{ ansible_operator_meta.name }}"
imagePullSecrets:
{% if image_pull_secret|length > 0 and image_pull_secrets|length == 0 %}
# image_pull_secret is deprecated in favor of image_pull_secrets
- name: {{ image_pull_secret }}
{% else %}
{% for secret in image_pull_secrets %}
- name: {{ secret }}
{% endfor %}
{% endif %}
{% if __dockercfg_secret is defined and __dockercfg_secret | length > 0%}
- name: {{ __dockercfg_secret }}
{% endif %}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "delete"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "{{ ansible_operator_meta.name }}"
  namespace: "{{ ansible_operator_meta.namespace }}"
subjects:
- kind: ServiceAccount
  name: "{{ ansible_operator_meta.name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "{{ ansible_operator_meta.name }}"
