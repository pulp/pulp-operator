apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  annotations: # About kube-linter checks: https://docs.kubelinter.io/#/generated/checks
    email: pulp-dev@redhat.com
    ignore-check.kube-linter.io/minimum-three-replicas: "Operator should be unique"
    ignore-check.kube-linter.io/no-read-only-root-fs: "Operator needs to generate files"
    ignore-check.kube-linter.io/no-node-affinity: "Do not check node affinity"
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: pulp-operator
    app.kubernetes.io/component: operator
    owner: pulp-dev
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: pulp-operator
        app.kubernetes.io/component: operator
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - args:
        - --leader-elect
        - --leader-election-id=pulp-operator
        image: controller:latest
        name: pulp-manager
        env:
          # Watch one namespace (namespace-scoped).
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ANSIBLE_GATHERING
              value: explicit
            - name: ANSIBLE_DEBUG_LOGS
              value: 'false'
            - name: RELATED_IMAGE_PULP
              value: quay.io/pulp/pulp-minimal:stable
            - name: RELATED_IMAGE_PULP_WEB
              value: quay.io/pulp/pulp-web:stable
            - name: RELATED_IMAGE_PULP_REDIS
              value: redis:latest
            - name: RELATED_IMAGE_PULP_POSTGRES
              value: postgres:13
        securityContext:
          allowPrivilegeEscalation: false
        livenessProbe:
          httpGet:
            path: /healthz
            port: 6789
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 6789
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 2000m
            memory: 4000Mi
          requests:
            cpu: 10m
            memory: 256Mi
      serviceAccountName: sa
      imagePullSecrets:
        - name: redhat-operators-pull-secret
      terminationGracePeriodSeconds: 10
