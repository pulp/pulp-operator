apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  annotations: # About kube-linter checks: https://docs.kubelinter.io/#/generated/checks
    email: pulp-dev@redhat.com
    ignore-check.kube-linter.io/minimum-three-replicas: "Operator should be unique"
    ignore-check.kube-linter.io/no-read-only-root-fs: "Operator needs to generate files"
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: pulp-operator
    app.kubernetes.io/component: operator
    owner: pulp-dev
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: pulp-operator
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: sa
      containers:
        - name: manager
          args:
          - --leader-elect
          - --leader-election-id=pulp-operator
          env:
          # Watch one namespace (namespace-scoped).
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ANSIBLE_GATHERING
              value: explicit
            - name: ANSIBLE_DEBUG_LOGS
              value: 'false'
            - name: RELATED_IMAGE_APP
              value: quay.io/pulp/pulp:stable
            - name: RELATED_IMAGE_APP_WEB
              value: quay.io/pulp/pulp-web:stable
            - name: RELATED_IMAGE_REDIS
              value: redis:latest
            - name: RELATED_IMAGE_POSTGRES
              value: postgres:12
          image: controller:latest
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 800m
              memory: 256Mi
            requests:
              cpu: 1m
              memory: 6Mi
          livenessProbe:
            httpGet:
              path: /readyz
              port: 6789
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6789
            initialDelaySeconds: 5
            periodSeconds: 10
      terminationGracePeriodSeconds: 10
