name: Pulp CI
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
jobs:
  insta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:devel" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
          minikube addons enable metrics-server
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Build Operator
        run: |
          sudo -E make docker-build IMG=quay.io/pulp/pulp-operator:devel
          sudo -E docker images
        shell: bash
      - name: Test insta-demo
        run: sudo -E insta-demo/pulp-insta-demo.sh -m
        shell: bash
      - name: Popeye
        run: |
          echo ::group::POPEYE
          sudo wget https://github.com/derailed/popeye/releases/download/v0.9.7/popeye_Linux_x86_64.tar.gz
          sudo tar -xvzf popeye_Linux_x86_64.tar.gz
          sudo mv popeye /usr/local/bin/
          sudo chmod +x /usr/local/bin/popeye
          echo ::endgroup::
          sudo popeye --kubeconfig ~/.kube/config || true
      - name: Logs
        if: always()
        run: |
          sudo -E docker images
          .github/workflows/scripts/show_logs.sh
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true

  components:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:devel" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
          minikube addons enable metrics-server
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Build Operator
        run: |
          sudo -E make docker-build IMG=quay.io/pulp/pulp-operator:devel
          sudo -E docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh -m
        shell: bash
      - name: Popeye
        run: |
          echo ::group::POPEYE
          sudo wget https://github.com/derailed/popeye/releases/download/v0.9.7/popeye_Linux_x86_64.tar.gz
          sudo tar -xvzf popeye_Linux_x86_64.tar.gz
          sudo mv popeye /usr/local/bin/
          sudo chmod +x /usr/local/bin/popeye
          echo ::endgroup::
          sudo popeye --kubeconfig ~/.kube/config || true
      - name: Test all components
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          .ci/scripts/retry.sh 3 ".ci/scripts/pulp_file-tests.sh -m"
        shell: bash
        env:
          PY_COLORS: '1'
      - name: Logs
        if: always()
        run: |
          sudo -E docker images
          .github/workflows/scripts/show_logs.sh
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true

  galaxy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - STORAGE: filesystem
          - STORAGE: azure
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:devel" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
          echo "CI_TEST_STORAGE=${{ matrix.STORAGE }}" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
          minikube addons enable metrics-server
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Build Operator
        run: |
          sudo -E make docker-build IMG=quay.io/pulp/pulp-operator:devel
          sudo -E docker images
        shell: bash
      - name: Prepare Object Storage
        run: |
          .ci/scripts/prepare-object-storage.sh
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E CI_TEST=galaxy ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh -m
        shell: bash
      - name: Popeye
        run: |
          echo ::group::POPEYE
          sudo wget https://github.com/derailed/popeye/releases/download/v0.9.7/popeye_Linux_x86_64.tar.gz
          sudo tar -xvzf popeye_Linux_x86_64.tar.gz
          sudo mv popeye /usr/local/bin/
          sudo chmod +x /usr/local/bin/popeye
          echo ::endgroup::
          sudo popeye --kubeconfig ~/.kube/config || true
      - name: Test
        run: sudo -E .ci/scripts/galaxy_ng-tests.sh -m
        shell: bash
      - name: Backup & Restore
        run: CI_TEST=galaxy .ci/scripts/backup_and_restore.sh -m
        shell: bash
        env:
          PY_COLORS: '1'
      - name: Logs
        if: always()
        run: |
          sudo -E docker images
          .github/workflows/scripts/show_logs.sh
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true

  molecule:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:devel" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install
        run: |
          pip install --upgrade pip
          sudo apt remove ansible
          pip install ansible==4.0.0 molecule[docker,lint] six openshift==0.12.1 jmespath
          ansible-galaxy collection install --force community.docker
          ansible --version
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Molecule test
        run: .ci/scripts/molecule.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_VERBOSITY: 2
      - name: Logs
        if: always()
        run: |
          kind export kubeconfig --name osdk-test
          sudo -E kubectl config set-context --current --namespace=osdk-test
          sudo -E kubectl port-forward service/example-pulp-web-svc 24880:24880 &
          sudo -E docker images
          .github/workflows/scripts/show_logs.sh -k
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true
        shell: bash
      - name: Molecule destroy
        if: always()
        run: molecule -v destroy -s kind
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  deploy:
    runs-on: ubuntu-latest
    needs: [insta, components, molecule, galaxy]
    strategy:
      fail-fast: false
      # Testing different python versions because of
      # https://pulp.plan.io/issues/5768#note-17
      matrix:
        include:
          - CI_TEST: true
          - CI_TEST: galaxy
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:devel" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Start minikube
        run: |
          minikube start --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000
          minikube addons enable metrics-server
        # now you can run kubectl to see the pods in the cluster
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Setup a minikube docker env
        run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      - name: Uninstalling GHA kustomize
        run: |
          # hack for uninstalling kustomize from GHA
          mv /usr/local/bin/kustomize /usr/local/bin/ghakustomize
          make kustomize
          mv ./bin/kustomize /usr/local/bin/kustomize
          kustomize version
        shell: bash
      - name: Build Operator
        run: |
          sudo -E make docker-build IMG=quay.io/pulp/pulp-operator:devel
          sudo -E docker images
        shell: bash
      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Add stable images
        if: github.event_name != 'schedule'
        run: |
          pip install aiohttp packaging PyYAML sh
          CI_TEST=${{ matrix.CI_TEST }} python3 .ci/scripts/images.py
      - name: Testing images
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          CI_TEST=${{ matrix.CI_TEST }} .github/workflows/scripts/build_images.sh
          CI_TEST=${{ matrix.CI_TEST }} .github/workflows/scripts/test_images.sh -m
        shell: bash
      - name: Deploy images
        run: CI_TEST=${{ matrix.CI_TEST }} .ci/scripts/deploy.sh
        shell: bash
      - name: Define QUAY_IMAGE_TAG environment variable
        if: github.event_name == 'schedule'
        run: |
          TEST=${{ matrix.CI_TEST }}
          echo $TEST
          if [[ "$TEST" == "galaxy" ]]; then
            CURRENT_VERSION=$(docker run quay.io/pulp/galaxy:latest bash -c 'pip3 show galaxy_ng | sed -n -e "s/Version: //p"')
          else
            CURRENT_VERSION=$(docker run quay.io/pulp/pulp:latest bash -c 'pip3 show pulpcore | sed -n -e "s/Version: //p"')
          fi
          echo $CURRENT_VERSION
          echo "QUAY_IMAGE_TAG=$CURRENT_VERSION-$(date +%j)" >> $GITHUB_ENV
          echo "QUAY_EXPIRE=14" >> $GITHUB_ENV
        shell: bash
      - name: Deploy Pulp/Galaxy nightly build
        if: github.event_name == 'schedule'
        run: |
          CI_TEST=${{ matrix.CI_TEST }} .github/workflows/scripts/build_images.sh
          CI_TEST=${{ matrix.CI_TEST }} .ci/scripts/deploy.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: Logs
        if: always()
        run: |
          sudo -E docker images
          .github/workflows/scripts/show_logs.sh
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24880/pulp/api/v3/status/ || true
