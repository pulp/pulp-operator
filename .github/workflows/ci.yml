name: Pulp CI
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  schedule:
    # * is a special character in YAML so you have to quote this string
    # runs at 3:00 UTC daily
    - cron: '00 3 * * *'
jobs:
  insta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Build Operator
        run: |
          sudo make docker-build IMG=quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Test insta-demo
        run: sudo -E insta-demo/pulp-insta-demo.sh
        shell: bash
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=controller-manager -c manager --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  components:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install k3s and Operator
        run: |
          sudo -E .ci/scripts/k3s-install.sh
        shell: bash
      - name: Build Operator
        run: |
          sudo make docker-build IMG=quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh
        shell: bash
      - name: Test all components
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          .ci/scripts/pulp_file-tests.sh
        shell: bash
        env:
          PY_COLORS: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=controller-manager -c manager --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  molecule:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install
        run: pip3 install docker molecule molecule-docker ansible-lint yamllint flake8 openshift jmespath
      - name: Molecule
        run: .ci/scripts/molecule.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'

  galaxy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install k3s
        run: |
          sudo -E .ci/scripts/k3s-install.sh
        shell: bash
      - name: Build Operator
        run: |
          sed -i "s/image: pulp/image: galaxy/g" config/samples/pulp_v1alpha1_pulp.ci.yaml
          sudo make docker-build IMG=quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Build galaxy image
        run: |
          cd $GITHUB_WORKSPACE/containers/
          cp $GITHUB_WORKSPACE/.ci/ansible/galaxy/vars.yaml vars/vars.yaml
          sed -i "s/podman/docker/g" common_tasks.yaml
          pip install ansible
          ansible-playbook -v build.yaml
          cd $GITHUB_WORKSPACE
        shell: bash
      - name: Test
        run: |
          sudo -E ./up.sh
          .ci/scripts/pulp-operator-check-and-wait.sh
          http http://localhost:24817/
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=controller-manager -c manager --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  deploy:
    runs-on: ubuntu-latest
    needs: [insta, components, molecule]
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install k3s and Operator
        run: |
          sudo -E .ci/scripts/k3s-install.sh
        shell: bash
      - name: Build Operator
        run: |
          sudo make docker-build IMG=quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Deploy
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          sudo -E .ci/scripts/deploy.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=controller-manager -c manager --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/
