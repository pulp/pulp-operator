name: Pulp PR
on:
  pull_request:
    branches:
      - '*'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: PR head repo
        id: head_repo_name
        run: |
          HEAD_REPO_NAME=$(jq -r '.pull_request.head.repo.full_name' "$GITHUB_EVENT_PATH")
          echo "PR head repo: $HEAD_REPO_NAME"
          echo "::set-output name=repo::$HEAD_REPO_NAME"
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
          repository: ${{ steps.head_repo_name.outputs.repo }}
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Check commit message
        if: github.event_name == 'pull_request'
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          echo ::group::REQUESTS
          pip install requests
          echo ::endgroup::
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .ci/scripts/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash

  insta:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: PR head repo
        id: head_repo_name
        run: |
          HEAD_REPO_NAME=$(jq -r '.pull_request.head.repo.full_name' "$GITHUB_EVENT_PATH")
          echo "PR head repo: $HEAD_REPO_NAME"
          echo "::set-output name=repo::$HEAD_REPO_NAME"
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
          repository: ${{ steps.head_repo_name.outputs.repo }}
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          sudo operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Test insta-demo
        env:
          FORKED_REPOSITORY: ${{ steps.head_repo_name.outputs.repo }}
        run: sudo -E insta-demo/pulp-insta-demo.sh
        shell: bash
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=pulp-operator -c pulp-operator --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  components:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install k3s
        run: |
          sudo -E .ci/scripts/k3s-install.sh
        shell: bash
      - name: Build Operator
        run: |
          echo ::group::SDK
          CURRENT_VERSION=$(head -1 ./build/Dockerfile  | cut -d ":" -f 2)
          sudo wget https://github.com/operator-framework/operator-sdk/releases/download/$CURRENT_VERSION/operator-sdk-$CURRENT_VERSION-x86_64-linux-gnu -O /usr/local/bin/operator-sdk
          sudo chmod +x /usr/local/bin/operator-sdk
          echo ::endgroup::
          sudo operator-sdk build quay.io/pulp/pulp-operator:latest
          sudo docker images
        shell: bash
      - name: Deploy pulp-operator to K8s
        run: sudo -E ./up.sh
        shell: bash
      - name: Check and wait pulp-operator deploy
        run: .ci/scripts/pulp-operator-check-and-wait.sh
        shell: bash
      - name: Test all components
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_file.git
          .ci/scripts/pulp_file-tests.sh
        shell: bash
        env:
          PY_COLORS: '1'
      - name: After failure
        if: failure()
        run: |
          sudo docker images
          sudo kubectl logs -l name=pulp-operator -c pulp-operator --tail=10000
          sudo kubectl logs -l app=pulp-api --tail=10000
          sudo kubectl logs -l app=pulp-content --tail=10000
          sudo kubectl logs -l app=pulp-worker --tail=10000
          sudo kubectl logs -l app=pulp-resource-manager --tail=10000
          http --timeout 30 --check-status --pretty format --print hb http://localhost:24817/pulp/api/v3/status/

  molecule:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMG=quay.io/pulp/pulp-operator:latest" >> $GITHUB_ENV
          echo "CI_TEST=true" >> $GITHUB_ENV
        shell: bash
      - name: Install
        run: pip3 install molecule[docker,lint] openshift jmespath
      - name: Molecule
        run: .ci/scripts/molecule.sh
        shell: bash
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
      - name: After failure
        if: failure()
        run: |
          docker exec -it osdk-test-control-plane journalctl -S today --no-pager
