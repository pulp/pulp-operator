name: "Install pre-reqs"
inputs:
  component-type:
    required: false
  ingress-type:
    required: false
  deploy:
    required: false
  minikube-version:
    required: false
runs:
  using: "composite"
  steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    - name: Setup Go environment
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: false
    - name: Install httpie
      run: |
        echo ::group::HTTPIE
        sudo apt-get update -yq
        sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
        echo ::endgroup::
        echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
        echo "CI_TEST=true" >> $GITHUB_ENV
        echo "TEST=pulp" >> $GITHUB_ENV
        echo "COMPONENT_TYPE=${{ inputs.component-type }}" >> $GITHUB_ENV
        echo "INGRESS_TYPE=${{ inputs.ingress-type }}" >> $GITHUB_ENV
      shell: bash
    - name: Updating registries configuration
      if: ${{ !inputs.deploy }}
      run: |
        if [ -f "/etc/docker/daemon.json" ] || sudo systemctl is-active --quiet docker
        then
          echo "INFO:
          Updating docker configuration
          "

          echo "$(cat /etc/docker/daemon.json | jq -s '.[0] + {
          "insecure-registries" : ["ingress.local","nodeport.local:30000"]
          }')" | sudo tee /etc/docker/daemon.json
          sudo service docker restart || true
        fi

        if [ -f "/etc/containers/registries.conf" ]
        then
          echo "INFO:
          Updating registries configuration
          "
          echo "[registries.insecure]
          registries = ['ingress.local','nodeport.local:30000']
          " | sudo tee -a /etc/containers/registries.conf
        fi
      shell: bash
    - name: Start minikube
      if: ${{ !inputs.deploy }}
      run: |
        if [[ -z "${{ inputs.minikube-version }}" ]] ; then
          minikube start --memory=max --cpus=max --driver=docker --extra-config=apiserver.service-node-port-range=80-32000
        else
          minikube start --memory=max --cpus=max --vm-driver=docker --extra-config=apiserver.service-node-port-range=80-32000 --kubernetes-version=${{ inputs.minikube-version }}
        fi
        minikube addons enable metrics-server
        minikube addons enable ingress
      shell: bash
    - name: Try the cluster !
      if: ${{ !inputs.deploy }}
      run: kubectl get pods -A
      shell: bash
    - name: Setup a minikube docker env
      if: ${{ !inputs.deploy }}
      run: minikube -p minikube docker-env | grep "export" | sed 's/export //' | sed 's/"//g' >> $GITHUB_ENV
      shell: bash
    - name: Check code format and generate manifests
      if: ${{ !inputs.deploy }}
      run: |
        make manifests generate fmt vet
      shell: bash
    - name: Prepare Object Storage
      if: ${{ !inputs.deploy }}
      run: |
        if [[ "${{ inputs.component-type }}" == "s3" ]]; then
          echo "CI_TEST_STORAGE=s3" >> $GITHUB_ENV
        fi
        .ci/scripts/prepare-object-storage.sh
      shell: bash
